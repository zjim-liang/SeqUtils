#!/usr/bin/env python
import sys
import re

def safe_open(filename, mode='rb'):
    try:
        if filename.endswith('.gz'):
            import gzip
            return gzip.open(filename, mode)
        else:
            return open(filename, mode)
    except (IOError, OSError):
        sys.stderr.write('[ERROR] cannot open {}!'.format(filename))
        sys.exit(1)

def fasta2bed(infile, outfile):
    with safe_open(infile, 'r') as fasta, \
            safe_open(outfile, 'w') as bed:
        Chr = str()
        Pos = 0
        for line in fasta:
            if line.startswith('>'):
                if Chr and Pos:
                    bed.write('{}\t{}\t{}\n'.format(Chr, 0, Pos))
                Chr = line.lstrip('>').split()[0]
                Pos = 0
            elif re.match(r'^[ATGCNatgcn]+$', line.strip()):
                Pos += len(line.strip())
        if Chr and Pos:
            bed.write('{}\t{}\t{}\n'.format(Chr, 0, Pos))
    return

def fasta2Nblock(infile, outfile):
    with safe_open(infile, 'r') as fasta, \
            safe_open(outfile, 'w') as bed:
        Chr = str()
        base = str()
        lpos = -1
        rpos = 0
        for line in fasta:
            if line.startswith('>'):
                if Chr and (lpos + 1):
                    bed.write('{}\t{}\t{}\n'.format(Chr, lpos, rpos))
                Chr = line.lstrip('>').split()[0]
                base = str()
                lpos = -1
                rpos = 0
            elif re.match(r'^[ATGCNatgcn]+$', line.strip()):
                for char in line.strip():
                    if char in ('N', 'n') and char != base:
                        lpos = rpos
                    elif base in ('N', 'n') and char != base:
                        if Chr:
                            bed.write('{}\t{}\t{}\n'.format(Chr, lpos, rpos))
                        lpos = -1
                    rpos += 1
                    base = char
        if Chr and (lpos + 1):
            bed.write('{}\t{}\t{}\n'.format(Chr, lpos, rpos))
    return
